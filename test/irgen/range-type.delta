// RUN: %delta -print-ir %s | %FileCheck %s
// RUN: %delta -print-ir %s | %FileCheck %s -check-prefix=CHECK-RANGE
// RUN: check_exit_status 10 %delta run %s

// CHECK-RANGE: define %"Range<int>" @"Range<int>.init"(i32 %start, i32 %end)

// CHECK: define i32 @f(%"Range<int>" %r)
func f(r: Range<int>) -> int {
    var sum = 0;

    // CHECK: alloca %"RangeIterator<int>"
    // CHECK: call %"RangeIterator<int>" @"Range<int>.iterator"(%"Range<int>" %r)
    // CHECK: call i1 @"RangeIterator<int>.hasNext"
    // CHECK: call i32 @"RangeIterator<int>.next"
    for (let i in r) {
        sum += i;
    }

    return sum;
}

// CHECK-LABEL: define i32 @main()
func main() -> int {
    // CHECK-NEXT: call %"Range<int>" @"Range<int>.init"(i32 0, i32 5)
    // CHECK-NEXT: call i32 @f(%"Range<int>" %{{[0-9]+}})
    return f(0..5);
}
