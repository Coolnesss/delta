// RUN: %delta -print-ir %s | %FileCheck %s

func main() {
    var sum = 0;

    // CHECK: %i = alloca i32
    // CHECK: [[RANGE:%[a-z0-9]+]] = call %"ClosedRange<int>" @"ClosedRange<int>.init"(i32 68, i32 75)
    // CHECK-NEXT: [[START:%[a-z0-9]+]] = extractvalue %"ClosedRange<int>" [[RANGE]], 0
    // CHECK-NEXT: [[END:%[a-z0-9]+]] = extractvalue %"ClosedRange<int>" [[RANGE]], 1
    // CHECK-NEXT: store i32 [[START]], i32* %i
    // CHECK-NEXT: br label %for
    for (i in 68...75) {
        // CHECK: for: ; preds = %body, %0
        // CHECK-NEXT: %i1 = load i32, i32* %i
        // CHECK-NEXT: [[CMP:%[a-z0-9]+]] = icmp sle i32 %i1, [[END]]
        // CHECK-NEXT: br i1 [[CMP]], label %body, label %endfor

        // CHECK: body: ; preds = %for
        // CHECK-NEXT: [[LOADED_SUM:%[a-z0-9]+]] = load i32, i32* %sum
        // CHECK-NEXT: %i2 = load i32, i32* %i
        // CHECK-NEXT: [[NEW_SUM:%[a-z0-9]+]] = add i32 [[LOADED_SUM]], %i2
        // CHECK-NEXT: store i32 [[NEW_SUM]], i32* %sum
        // CHECK-NEXT: [[NEW_I:%[a-z0-9]+]] = add i32 %i1, 1
        // CHECK-NEXT: store i32 [[NEW_I]], i32* %i
        // CHECK-NEXT: br label %for
        sum += i;
    }
}
