// RUN: %delta -print-ir %s | %FileCheck %s

struct S {
    let i: int;
    init() {}
    func f() {}
}

class C {
    let i: int;
    init() {}
    func f() {}
}

func s() -> S { return S(); }
func c() -> C { return C(); }

func main() {
    // CHECK: %1 = call %S @s()
    // CHECK-NEXT: call void @S.f(%S %1)
    s().f();

    // CHECK-NEXT: %2 = call %C @c()
    // CHECK-NEXT: %3 = alloca %C
    // CHECK-NEXT: store %C %2, %C* %3
    // CHECK-NEXT: call void @C.f(%C* %3)
    c().f();

    // CHECK-NEXT: %4 = alloca %S
    // CHECK-NEXT: call void @S.init(%S* %4)
    // CHECK-NEXT: %5 = load %S, %S* %4
    // CHECK-NEXT: call void @S.f(%S %5)
    S().f();

    // CHECK-NEXT: %6 = alloca %C
    // CHECK-NEXT: call void @C.init(%C* %6)
    // CHECK-NEXT: call void @C.f(%C* %6)
    C().f();

    // CHECK-NEXT: ret i32 0
}
